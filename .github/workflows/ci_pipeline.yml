name: CI Pipeline for Ranking Model App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install dependencies
        run: poetry install --no-interaction

  lint-format:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Lint with flake8
        run: poetry run flake8 main/

      # Uncomment if you want Black formatting check too
      # - name: Check formatting with black
      #   run: poetry run black --check main/

  tests:
    runs-on: ubuntu-latest
    needs: lint-format
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Train model
        run: poetry run python -m main.train

      - name: Run unit tests with coverage
        run: poetry run pytest --cov=main --cov-report=xml --cov-report=term --cov-fail-under=1 -m "unit" tests/

      - name: Run performance tests
        run: poetry run pytest -m "performance" tests/

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  api-health:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Start API server
        run: |
          poetry run uvicorn api.main:api --host 0.0.0.0 --port 8000 &
          sleep 5

      - name: Health check - Ping API
        run: curl --fail http://localhost:8000/

  security-check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run Bandit (Security linter)
        run: poetry run bandit -r main/ -ll

      - name: Run Safety (Dependency vulnerability checker)
        run: poetry run safety check
